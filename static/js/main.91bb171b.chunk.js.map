{"version":3,"sources":["components/Profile/Profile.module.css","components/Friendlist/FriendList.module.css","components/Statistics/statistics.module.css","components/Transactions/Transactions.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Profile/Profile.js","components/Statistics/colorGenerator.js","components/Statistics/Statistics.js","components/Friendlist/Friends.js","components/Friendlist/FriendList.js","components/Transactions/Transactions.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","User","avatar","name","tag","location","stats","followers","views","likes","styles","profile","description","thumb","src","alt","item","label","quantity","backgroundColor","color","Math","floor","random","pow","toString","length","Statistics","title","statistics","list","map","id","percentage","style","Friends","isOnline","classes","status","online","ofline","width","FriendsList","friends","friend_list","Transaction","items","t","transaction","type","amount","currency","tra","App","user","statisticalData","FriendList","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bb171b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__29yQZ\",\"thumb\":\"Profile_thumb__1shZi\",\"description\":\"Profile_description__1QDpE\",\"name\":\"Profile_name__30Lja\",\"tag\":\"Profile_tag__2B1XX\",\"location\":\"Profile_location__3VmUT\",\"stats\":\"Profile_stats__FdHJV\",\"label\":\"Profile_label__bpMYJ\",\"item\":\"Profile_item__2xUEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__17CFz\",\"item\":\"FriendList_item__qV_jT\",\"online\":\"FriendList_online__8m511\",\"ofline\":\"FriendList_ofline__3jUG5\",\"status\":\"FriendList_status__2ApkW\",\"name\":\"FriendList_name__1q15y\",\"avatar\":\"FriendList_avatar__3m4w3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__B-smD\",\"title\":\"statistics_title__nJMn5\",\"list\":\"statistics_list__36fNr\",\"item\":\"statistics_item__1vo7-\",\"label\":\"statistics_label__1NbGj\",\"percentage\":\"statistics_percentage__AlhEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"Transactions_transaction__1QEgc\",\"box\":\"Transactions_box__3kIIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1ElQ1\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst User = ({ avatar, name, tag, location, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <div className={styles.thumb}>\n          <img\n            className={styles.avatar}\n            src={avatar}\n            alt=\"Аватар пользователя\"\n          />\n        </div>\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li className={styles.item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n  // followers: PropTypes.number.isRequired,\n  // views: PropTypes.number.isRequired,\n  // likes: PropTypes.number.isRequired,\n};\n\nexport default User;\n","export default function backgroundColor() {\n  let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\n  while (color.length < 6) {\n    color = '0' + color;\n  }\n  return '#' + color;\n}\n","import PropTypes from 'prop-types';\nimport s from './statistics.module.css';\nimport backgroundColor from './colorGenerator';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {/* {!title ? !title : <h2 className={s.title}>{title}</h2>} */}\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.list}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={s.item}\n            key={id}\n            style={{ backgroundColor: backgroundColor() }}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport classes from './FriendList.module.css';\n\nconst Friends = ({ avatar, name, isOnline }) => {\n  return (\n    <div className={classes.status}>\n      <span className={isOnline ? classes.online : classes.ofline}>\n        {isOnline}\n      </span>\n      <img className={classes.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={classes.name}>{name}</p>\n    </div>\n  );\n};\nFriends.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\nexport default Friends;\n// import PropTypes from 'prop-types';\n// import classes from './FriendList.module.css';\n\n// export default function FriendList({ friends }) {\n//   return (\n//     <ul className={classes.friend_list}>\n//       {friends.map(({ avatar, name, isOnline, id }) => (\n//         <li className={classes.item} key={id}>\n//           <span className={classes.status} data-status={isOnline}></span>\n//           <img className={classes.avatar} src={avatar} alt={name} width=\"48\" />\n//           <p className={classes.name}>{name}</p>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// FriendList.propTypes = {\n//   friends: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       avatar: PropTypes.string,\n//       name: PropTypes.string,\n//       isOnline: PropTypes.bool,\n//       id: PropTypes.number,\n//     }),\n//   ),\n// };\n","import Friends from './Friends';\nimport PropTypes from 'prop-types';\nimport classes from './FriendList.module.css';\n\nfunction FriendsList({ friends }) {\n  return (\n    <ul className={classes.friend_list}>\n      {friends.map(({ name, avatar, isOnline, id }) => (\n        <li key={id} className={classes.item}>\n          <Friends name={name} avatar={avatar} isOnline={isOnline} />\n        </li>\n      ))}\n    </ul>\n  );\n}\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\nexport default FriendsList;\n","import PropTypes from 'prop-types';\nimport t from './Transactions.module.css';\n\nfunction Transaction({ items }) {\n  return (\n    <table className={t.transaction}>\n      <thead>\n        <tr>\n          <th>type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      {items.map(({ type, amount, currency, id }) => (\n        <tbody key={id}>\n          <tr className={t.tra}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n}\nTransaction.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Transaction;\n","import Container from './Container/Container';\nimport User from './Profile/Profile';\nimport user from '../user.json';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from '../statistical-data.json';\nimport FriendList from './Friendlist/FriendList';\nimport friends from '../friends.json';\nimport TransactionHistory from './Transactions/Transactions';\nimport transactions from '../transactions.json';\n\nexport default function App() {\n  return (\n    <Container>\n      <User\n        name={user.name}\n        avatar={user.avatar}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n        // followers={users[0].stats.followers}\n        // views={users[0].stats.views}\n        // likes={users[0].stats.likes}\n      />\n      <Statistics stats={statisticalData} title=\"Upload stats\"></Statistics>\n      <FriendList friends={friends}></FriendList>\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n\n// const user = {\n//   name: 'Jacques Gluke',\n//   tag: 'jgluke',\n//   location: 'Ocho Rios, Jamaica',\n//   avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n//   stats: {\n//     followers: 5603,\n//     views: 4827,\n//     likes: 1308,\n//   },\n// };\n\n// const social_profile = (\n\n// );\n\n// const description = <div></div>;\n// const stats = <ul></ul>;\n// const profile = (\n//   <div>\n//     {description}\n//     {stats}\n//   </div>\n// );\n// const description = React.createElement('div', {\n//   children: ['img', 'p', 'p', 'p'],\n// });\n// const stats = React.createElement('ul', { children: ['li', 'li', 'li'] });\n// const profile = React.createElement('div', { children: [description, stats] });\n// console.log(profile);\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}